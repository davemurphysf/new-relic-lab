apiVersion: v1
kind: Service
metadata:
  name: api
  labels:
    app: api
spec:
  ports:
    - port: 3000
      name: api-service
  type: NodePort
  selector:
    app: api
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: api
  labels:
    app: api
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: api
    spec:
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
      containers:
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy",
                  "-instances=new-relic-lab:us-central1:new-relic-lab-pg=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
      - name: api
        image: us.gcr.io/new-relic-lab/node-api:v1.0.18
        ports:
        - containerPort: 3000
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 500m
        env:
        - name: GET_HOSTS_FROM
          value: dns
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: K8S_HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: K8S_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: K8S_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: K8S_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: K8S_POD_SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: NEW_RELIC_APP_NAME
          valueFrom:
            configMapKeyRef:
              name: nr-settings
              key: NEW_RELIC_APP_NAME
        - name: NEW_RELIC_LICENSE_KEY
          valueFrom:
            configMapKeyRef:
              name: nr-settings
              key: NEW_RELIC_LICENSE_KEY
        - name: NEW_RELIC_NO_CONFIG_FILE
          value: "true"
        - name: NEW_RELIC_LOG
          value: stdout
        - name: NEW_RELIC_DISTRIBUTED_TRACING_ENABLED
          value: "true"
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: redis-settings
              key: REDIS_HOST
        - name: REDIS_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: redis-settings
              key: REDIS_PASSWORD
        - name: PROJECT_ID
          valueFrom:
            configMapKeyRef:
              name: storage-settings
              key: PROJECT_ID
        - name: BUCKET_NAME
          valueFrom:
            configMapKeyRef:
              name: storage-settings
              key: BUCKET_NAME
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: username
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: password
        - name: PGHOST
          value: "127.0.0.1"
        - name: PGDATABASE
          value: nrlab
